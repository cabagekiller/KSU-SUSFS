name: Build and Release Kernel

on:
  push:
    branches:
      - main

env:
  ROOT_DIR_PREFIX: "OP12-A15"
  BRANCH: "android14-6.1"
  REPO_NAME: "Cabagekiller/OnePlus_KernelSU_SUSFS"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Free disk space
        run: curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash

      - name: Add 16GB Swap Space
        run: |
          sudo fallocate -l 16G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
          free -h

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y zip bc bison flex g++-multilib \
                                      gcc-multilib libc6-dev-i386 \
                                      lib32ncurses5-dev x11proto-core-dev \
                                      libx11-dev lib32z1-dev libgl1-mesa-glx \
                                      libxml2-utils xsltproc unzip gh

      - name: Install and update repo tool
        run: |
          sudo wget -O /usr/bin/repo https://storage.googleapis.com/git-repo-downloads/repo
          sudo chmod a+x /usr/bin/repo

      - name: Set up directories
        run: |
          set -e
          mkdir -p ./builds
          cd ./builds
          export ROOT_DIR="${ROOT_DIR_PREFIX}-$(date +'%Y-%m-%d-%I-%M-%p')-release"
          mkdir -p "$ROOT_DIR"

      - name: Clone repositories
        run: |
          cd ./builds/${ROOT_DIR}
          git clone https://github.com/TheWildJames/AnyKernel3.git -b $BRANCH

      - name: Get the kernel
        run: |
          set -e
          cd ./builds/${ROOT_DIR}
          mkdir oneplus12_v && cd oneplus12_v
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8650 -m oneplus12_v.xml --depth=1
          repo sync -j$(nproc) -f
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_*

      - name: Add KernelSU
        run: |
          cd ./builds/${ROOT_DIR}/oneplus12_v/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next-susfs
          sed -i 's/ccflags-y += -DKSU_VERSION=16/ccflags-y += -DKSU_VERSION=12113/' ./KernelSU-Next/kernel/Makefile

      - name: Set KSU_GIT_VERSION
        run: |
          cd ./builds/${ROOT_DIR}/oneplus12_v/kernel_platform
          export KSU_GIT_VERSION=$(git rev-parse HEAD)
          echo "KSU_GIT_VERSION=$KSU_GIT_VERSION" >> $GITHUB_ENV

      - name: Configure Kernel
        run: |
          cd ./builds/${ROOT_DIR}/oneplus12_v/kernel_platform
          cat <<EOF >> ./common/arch/arm64/configs/gki_defconfig
          CONFIG_KSU=y
          CONFIG_KSU_SUSFS=y
          CONFIG_KSU_SUSFS_SUS_PATH=y
          CONFIG_KSU_SUSFS_SUS_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_KSTAT=y
          CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y
          CONFIG_KSU_SUSFS_TRY_UMOUNT=y
          CONFIG_KSU_SUSFS_SPOOF_UNAME=y
          CONFIG_KSU_SUSFS_ENABLE_LOG=y
          CONFIG_KSU_SUSFS_OPEN_REDIRECT=y
          CONFIG_KSU_SUSFS_SUS_SU=y
          EOF
          sed -i '2s/check_defconfig//' ./common/build.config.gki

      - name: Disable Kernel Debug Config
        run: |
          cd ./builds/${ROOT_DIR}/oneplus12_v/kernel_platform
          sed -i '/CONFIG_DEBUG_KERNEL/d' ./common/arch/arm64/configs/gki_defconfig
          sed -i '/CONFIG_DEBUG_INFO/d' ./common/arch/arm64/configs/gki_defconfig
          sed -i '/CONFIG_DEBUG_INFO_REDUCED/d' ./common/arch/arm64/configs/gki_defconfig
          sed -i '/CONFIG_DEBUG_FS/d' ./common/arch/arm64/configs/gki_defconfig
          sed -i '/CONFIG_DEBUG_SECTION_MISMATCH/d' ./common/arch/arm64/configs/gki_defconfig
          echo "# Kernel debugging disabled for production build" >> ./common/arch/arm64/configs/gki_defconfig

      - name: Verify repo sync and check kernel platform directory
        run: |
          cd ./builds/${ROOT_DIR}/oneplus12_v
          if [ ! -d "kernel_platform" ]; then
            echo "Error: kernel_platform directory does not exist!"
            exit 1
          fi
          echo "Directory kernel_platform exists. Listing contents..."
          ls -R ./kernel_platform

      - name: Cache Clang
        uses: actions/cache@v3
        with:
          path: ./clang-aosp
          key: clang-r522817

      - name: Download Clang-aosp
        run: |
          mkdir clang-aosp
          wget https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/main/clang-r522817.tar.gz
          tar -C clang-aosp/ -zxvf clang-r522817.tar.gz

      - name: Download Gcc-aosp
        run: |
          mkdir gcc-64
          wget -O gcc-aarch64.tar.gz https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/+archive/refs/tags/android-12.1.0_r27.tar.gz
          tar -C gcc-64/ -zxvf gcc-aarch64.tar.gz
          
      - name: Build Kernel 
        run: |
            cd ./builds/${ROOT_DIR}/oneplus12_v/kernel_platform
            export ARCH=arm64
            export SUBARCH=arm64
            export BRAND_SHOW_FLAG=oneplus
            export PATH=$GITHUB_WORKSPACE/clang-aosp/bin:$GITHUB_WORKSPACE/gcc-64/bin:$PATH
            export KBUILD_BUILD_HOST=Github-Action
            export KBUILD_BUILD_USER=$(echo ${{ github.actor }} | tr A-Z a-z)
            BA_CMD="CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-android-"
            EX_CMD="LD=ld.lld LLVM=1 LLVM_IAS=1"
            make O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD gki_defconfig # Corrected line
            make -j$(nproc --all) O=out ARCH=arm64 CC=clang $BA_CMD $EX_CMD

      - name: Upload Build Logs
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: ./builds/${ROOT_DIR}/oneplus12_v/kernel_platform/out/

      - name: Copy Kernel Image
        run: |
          cp ./builds/${ROOT_DIR}/oneplus12_v/kernel_platform/out/dist/Image ./builds/${ROOT_DIR}/AnyKernel3/Image

      - name: Create ZIP Package
        run: |
          cd ./builds/${ROOT_DIR}/AnyKernel3
          ZIP_NAME="Anykernel3-OP-A15-${BRANCH}-KernelSU-SUSFS-$(date +'%Y-%m-%d-%H-%M-%S').zip"
          zip -r "../$ZIP_NAME" ./*
          ls -lh "../$ZIP_NAME"

      - name: Publish Release
        run: |
          cd ./builds/${ROOT_DIR}
          gh release create "v$(date +'%Y.%m.%d-%H%M%S')" "$ZIP_NAME" \
            --repo "$REPO_NAME" \
            --title "OP12 A15 $BRANCH With KernelSUnext & SUSFS" \
            --notes "Kernel release"
