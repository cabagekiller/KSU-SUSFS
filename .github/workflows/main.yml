name: Kernel Build and Release

on:
  push:
    branches:
      - main

env:
  ROOT_DIR_PREFIX: "OP12-A15"
  BRANCH: "android14-6.1"
  REPO_NAME: "Cabagekiller/OnePlus_KernelSU_SUSFS"
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Free Disk Space
      - name: Free disk space
        run: curl -fsSL https://raw.githubusercontent.com/kou/arrow/e49d8ae15583ceff03237571569099a6ad62be32/ci/scripts/util_free_space.sh | bash

      # Add Swap Space
      - name: Add 16GB Swap Space
        run: |
          sudo fallocate -l 16G /swapfile
          sudo chmod 600 /swapfile
          sudo mkswap /swapfile
          sudo swapon /swapfile
          echo '/swapfile none swap sw 0 0' | sudo tee -a /etc/fstab
          free -h

      # Checkout Repository
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      # Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # Install Dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y zip bc bison flex g++-multilib \
                                  gcc-multilib libc6-dev-i386 \
                                  lib32ncurses5-dev x11proto-core-dev \
                                  libx11-dev lib32z1-dev libgl1-mesa-glx \
                                  libxml2-utils xsltproc unzip gh
          sudo apt-get install -y --only-upgrade git repo

      # Install and Update Repo Tool
      - name: Install and update repo tool
        run: |
          sudo wget -O /usr/bin/repo https://storage.googleapis.com/git-repo-downloads/repo
          sudo chmod a+x /usr/bin/repo

      # Set up Directories
      - name: Set up directories
        run: |
          mkdir -p ./builds
          cd ./builds
          export ROOT_DIR="${ROOT_DIR_PREFIX}-$(date +'%Y-%m-%d-%I-%M-%p')-release"
          mkdir -p "$ROOT_DIR"

      # Clone Repositories
      - name: Clone repositories
        run: |
          cd ./builds/${ROOT_DIR}
          git clone https://github.com/TheWildJames/AnyKernel3.git -b $BRANCH
          git clone https://gitlab.com/simonpunk/susfs4ksu.git -b gki-android14-6.1
          git clone https://github.com/TheWildJames/kernel_patches.git

      # Get the Kernel
      - name: Get the kernel
        run: |
          cd ./builds/${ROOT_DIR}
          mkdir oneplus12_v && cd oneplus12_v
          repo init -u https://github.com/OnePlusOSS/kernel_manifest.git -b oneplus/sm8650 -m oneplus12_v.xml --depth=1
          repo sync -j$(nproc) -f
          rm -rf ./kernel_platform/common/android/abi_gki_protected_exports_*

      # Add KernelSU
      - name: Add KernelSU
        run: |
          cd ./builds/${ROOT_DIR}/oneplus12_v/kernel_platform
          curl -LSs "https://raw.githubusercontent.com/rifsxd/KernelSU-Next/next/kernel/setup.sh" | bash -s next
          echo "adding susfs"
          cp ../../susfs4ksu/kernel_patches/KernelSU/10_enable_susfs_for_ksu.patch ./KernelSU-Next/
          cp ../../susfs4ksu/kernel_patches/50_add_susfs_in_gki-android14-6.1.patch ./common/
          cp ../../susfs4ksu/kernel_patches/fs/susfs.c ./common/fs/
          cp ../../susfs4ksu/kernel_patches/include/linux/susfs.h ./common/include/linux/
          cp ../../susfs4ksu/kernel_patches/include/linux/susfs_def.h ./common/include/linux/
          cd ./KernelSU-Next/
          patch -p1 < 10_enable_susfs_for_ksu.patch
          cd ../common
          patch -p1 < 50_add_susfs_in_gki-android14-6.1.patch || true
          sed -i '/obj-\$(CONFIG_KSU_SUSFS_SUS_SU) += sus_su.o/d' ./fs/Makefile
          cd ..

      - name: Configure Kernel
        run: |
          cd ./builds/${ROOT_DIR}/oneplus12_v/kernel_platform
          cat <<EOF >> ./common/arch/arm64/configs/gki_defconfig
          CONFIG_KSU=y
          CONFIG_KSU_SUSFS=y
          CONFIG_KSU_SUSFS_SUS_PATH=y
          CONFIG_KSU_SUSFS_SUS_MOUNT=y
          CONFIG_KSU_SUSFS_SUS_KSTAT=y
          CONFIG_KSU_SUSFS_HAS_MAGIC_MOUNT=y
          CONFIG_KSU_SUSFS_TRY_UMOUNT=y
          CONFIG_KSU_SUSFS_SPOOF_UNAME=y
          CONFIG_KSU_SUSFS_ENABLE_LOG=y
          CONFIG_KSU_SUSFS_OPEN_REDIRECT=y
          CONFIG_KSU_SUSFS_SUS_SU=y
          EOF
          sed -i '2s/check_defconfig//' ./common/build.config.gki

      # Clear Bazel Cache (if issues persist)
      - name: Clear Bazel Cache
        run: |
          cd ./builds/${ROOT_DIR}/oneplus12_v
          bazel clean --expunge

      # Check Disk Space Before Build
      - name: Check Disk Space Before Build
        run: df -h

      # Configure and Build Kernel
      - name: Build Kernel with Debugging
        run: |
          cd ./builds/${ROOT_DIR}/oneplus12_v
          ./kernel_platform/build_with_bazel.py -t pineapple gki --verbose_failures > build_debug.log 2>&1 || (cat build_debug.log && exit 1)

      # Check Disk Space After Build
      - name: Check Disk Space After Build
        run: df -h

      # Upload Build Logs
      - name: Upload Build Logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: build-logs
          path: ./builds/${ROOT_DIR}/oneplus12_v/build_debug.log

      # Create ZIP Package and Publish Release
      - name: Create ZIP Package
        run: |
          cd ./builds/${ROOT_DIR}/AnyKernel3
          ZIP_NAME="Anykernel3-OP-A15-${BRANCH}-KernelSU-SUSFS-$(date +'%Y-%m-%d-%H-%M-%S').zip"
          zip -r "../$ZIP_NAME" ./*
          ls -lh "../$ZIP_NAME"

      - name: Publish Release
        run: |
          cd ./builds/${ROOT_DIR}
          gh release create "v${BRANCH}-$(date +'%Y.%m.%d-%H%M%S')" "$ZIP_NAME" \
            --repo "$REPO_NAME" \
            --title "OP12 A15 $BRANCH With KernelSU & SUSFS" \
            --notes "Kernel release"
